version: "3"
services:
  proxy:
    image: pinked/docker-flow-proxy-refreshing-error-pages
    healthcheck:
      test: "wget -q -O /dev/null $STATS_USER:$STATS_PASS@localhost/admin?stats || exit 1"
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy
    environment:
      - LISTENER_ADDRESS=swarm-listener
      - MODE=swarm
      - STATS_USER=${STATS_USER}
      - STATS_PASS=${STATS_PASS}
    deploy:
      update_config:
        parallelism: 1
        delay: 10s
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 128M
      restart_policy:
        condition: any

  swarm-listener:
    image: vfarcic/docker-flow-swarm-listener
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: "wget -q -O /dev/null localhost:8080/v1/docker-flow-swarm-listener/notify-services || exit 1"
    environment:
      - DF_NOTIF_CREATE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/reconfigure
      - DF_NOTIF_REMOVE_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/remove
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '0.40'
          memory: 128M

  cron:
    image: pinked/docker-flow-cron2
    read_only: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DF_UPDATE_SCHEDULE=*/5 * * * *
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.20'
          memory: 64M
        reservations:
          cpus: '0.10'
          memory: 16M
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any

  lets-encrypt:
    labels:
      - com.df.cron2=true
      - com.df.distribute=true
      - com.df.schedule=*/10 * * * *
    image: pinked/docker-flow-lets-encrypt-godaddy
    networks:
      - proxy
    volumes:
      - letsencrypt:/etc/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DF_NOTIF_CERT_SERVICE_URL=http://proxy:8080/v1/docker-flow-proxy/cert
      - TLD=${TLD}
      - CNAME=${CNAME}
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
      - GD_KEY=${GD_KEY}
      - GD_SECRET=${GD_SECRET}
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 0
      resources:
        limits:
          cpus: '1'
          memory: 256M
        reservations:
          cpus: '0.50'
          memory: 64M
      placement:
        constraints: [node.role == manager]

networks:
  default:
    external: false
  proxy:
    external: true

volumes:
  letsencrypt:
    driver: glusterfs 
